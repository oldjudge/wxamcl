#ifndef __dialog_optionen__
#define __dialog_optionen__

/**
@file
Subclass of DlgOptions, which is generated by wxFormBuilder.
*/

#include "dlg_options.h"
#include "main.h"
/** Implementing DlgOptions */
class dlg_options : public DlgOptions
{
public:
	/** Constructor */
	dlg_options( wxWindow* parent );
	wxWindow* GetGeneral() {return m_general;}
	wxWindow* GetTelnet() {return m_telnet;}
	wxWindow* GetLog() {return m_log;}
	wxString GetCS() {return m_cs;}
	wxString GetCSep() {return m_csep;}
	wxString GetCSw() {return m_sw;}
	wxString GetCSwr() {return m_swr;}
	wxInt16 GetCSwD() { return m_swd; }
	wxString GetCScr() {return m_scr;}
	wxString GetCVar() {return m_var;}
	wxString GetCList() {return m_list;}
	int GetMaxLines() {return m_lbuf;}
	int GetHistSize() {return m_hist;}
	wxString GetGMCPMods() {return m_gmcpmodules->GetValue();}
	//wxUint64 GetBufSize() {return m_buf;}
	bool GetKeepInput() {return m_ki;}
	bool GetParse() {return m_pi;}
	bool GetAnsi() {return m_ansi;}
	bool GetStamps() {return m_time;}
	bool GetMilli() {return m_millis;}
	bool GetEcho() {return m_echo;}
	bool GetTEcho() {return m_techo;}
	bool GetPrompt() {return m_prompt;}
	bool GetGagPrompt() {return m_gag;}
	wxString GetRegExp() {return m_regexp;}
	bool GetUseWrap() {return m_usew;}
	bool GetAutoWrap() {return m_autow;}
	unsigned int GetLineWrap() {return (unsigned int)m_wr;}
	bool GetMccp() {return m_mccp2;}
	bool GetGAEOR() {return m_iacgaeor2;}
	bool GetNaws() {return m_naws2;}
	bool GetMXP() {return m_mxp2;}
	bool GetMSP() {return m_msp2;}
	bool GetATCP() {return m_atcp2;}
	bool GetGMCP() {return m_gmcp2;}
	bool GetUTF8() {return m_utf8_2;}
	bool GetIPV6() {return m_ipv62;}
	bool GetAard() {return m_aard2;}
	bool GetMSDP() {return m_msdp2;}
	bool GetEvents() {return m_events;}
	bool GetEvConn() {return m_evconn;}
	bool GetEvDisco() {return m_evdisco;}
	bool GetEvRecv() {return m_evrecv;}
	bool GetEvTelnetData() {return m_evtelnetdata;}
	bool GetEvGMCPData() {return m_evgmcpdata;}
	bool GetEvMSDPData() {return m_evmsdpdata;}
	wxString GetEventFile() {return m_eventfile->GetPath();}
	bool GetUrls() {return m_urls;}
	bool GetSplitter() {return m_split;}
	bool GetInclude() {return m_inc;}
	bool GetTs() {return m_timest;}
	bool GetSEcho() {return m_secho;}
	bool GetAC() {return m_ac;}
	bool GetTabDlg() {return m_tabdlg2;}
	int GetACDel() {return m_acdel;}
	int GetLogOpt() {return m_lognr=m_logopts->GetSelection();}
	wxString GetLogDir() {return m_dirPicker1->GetPath();}
	wxString GetSoundDir() {return m_mspdir->GetPath();}
	wxString GetScriptDir() {return m_scriptdir->GetPath();}
	wxString GetDatabaseDir() {return m_dbdir->GetPath();}
	wxString GetProfileDir() {return m_profdir->GetPath();}
	wxString GetPackageDir() {return m_packdir->GetPath();}
	wxString GetLuaDir() {return m_luadir->GetPath();}
protected:
	// Handlers for events.
	void OnTabList( wxCommandEvent& event );
	void OnFontChanged( wxFontPickerEvent& event );
	void OnColEcho( wxColourPickerEvent& event );
	void OnColClient( wxColourPickerEvent& event );
	void OnColCustom( wxColourPickerEvent& event );
	void OnCol1( wxColourPickerEvent& event );
	void OnCol2( wxColourPickerEvent& event );
	void OnCol3( wxColourPickerEvent& event );
	void OnCol4( wxColourPickerEvent& event );
	void OnCol5( wxColourPickerEvent& event );
	void OnCol6( wxColourPickerEvent& event );
	void OnCol7( wxColourPickerEvent& event );
	void OnCol8( wxColourPickerEvent& event );
	void OnCol9( wxColourPickerEvent& event );
	void OnCol10( wxColourPickerEvent& event );
	void OnCol11( wxColourPickerEvent& event );
	void OnCol12( wxColourPickerEvent& event );
	void OnCol13( wxColourPickerEvent& event );
	void OnCol14( wxColourPickerEvent& event );
	void OnCol15( wxColourPickerEvent& event );
	void OnCol16( wxColourPickerEvent& event );
	void OnColor(wxColourPickerCtrl* c, int idx);
	void OnDefaultColors( wxCommandEvent &event );
	void OnUseWrap( wxCommandEvent& event );
	void OnAutoWrap( wxCommandEvent& event );
	void OnUseEvents( wxCommandEvent& event );
	void OnStartLogging( wxCommandEvent& event );
	
private:
	wxString m_cs;
	wxString m_csep;
	wxString m_sw;
	wxString m_swr;
	int m_swd;
	wxString m_scr;
	wxString m_var;
	wxString m_list;
	wxString m_regexp;
	wxString m_gmcpmods;
	
	int m_hist;
	bool m_ki;
	bool m_pi;
	bool m_ansi;
	bool m_time;
	bool m_millis;
	bool m_echo;
	bool m_techo;
	bool m_secho;
	bool m_prompt;
	bool m_gag;
	bool m_usew;
	bool m_autow;
	bool m_mccp2;
	bool m_mxp2;
	bool m_msp2;
	bool m_atcp2;
	bool m_gmcp2;
	bool m_aard2;
	bool m_msdp2;
	bool m_iacgaeor2;
	bool m_naws2;
	bool m_utf8_2;
	bool m_events;
	bool m_evconn;
	bool m_evrecv;
	bool m_evdisco;
	bool m_evtelnetdata;
	bool m_evgmcpdata;
	bool m_evmsdpdata;
	bool m_urls;
	bool m_split;
	wxString m_evfile;
	int m_wr;
	int m_lbuf;
	bool m_ac;
	int m_acdel;
	bool m_tabdlg2;
	bool m_ipv62;

	MudMainFrame *m_frame;

	bool m_inc;
	bool m_timest;
	int m_lognr;

	wxString m_logdir;

	void BuildSample();
};

#endif // __dialog_optionen__
